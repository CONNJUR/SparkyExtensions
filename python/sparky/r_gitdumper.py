from subprocess import Popen, PIPE
import os



def check_git_repo():
    p = Popen(["git", "status"], stdout=PIPE, stderr=PIPE)
    p.wait()
    if p.returncode != 0:
        raise ValueError("not a git repo: cannot dump & commit data (" + p.stderr.read() + ")")
    

DIR = os.path.expanduser("~") + "/Sparky/gitrepo/"
NAME = "autodump.txt"


def dump(my_string):
    os.chdir(DIR)
    check_git_repo()
    try:
        out = open(DIR + NAME, 'w')
        out.write(my_string)
        print 'wrote file: ' + out.name
        out.close()
        add = Popen(["git", "add", NAME], stdout=PIPE, stderr=PIPE)
        add.wait()
        if add.returncode != 0:
            raise ValueError("git add failed (" + add.stderr.read() + ")")
        commit = Popen(["git", "commit", "-m", 'autogenerated sparky dump'], stdout=PIPE, stderr=PIPE)
        commit.wait()
        if commit.returncode != 0:
            raise ValueError("git commit failed (" + commit.stderr.read() + ")")
    except Exception, e:
        print 'oops', e
        raise

